
```{r prepare-syllables}
#| label: prepare-syllables
#| echo: false
#| warning: false
#| message: false
duplicated_te <- bvq_data$pool$te[duplicated(bvq_data$pool$te)]

pool_tmp <- bvq_data$pool |>
    # drop items with missing observations in these variables
    drop_na(xsampa, wordbank_lemma) |>
    filter(n_lemmas == 1,
           # exclude items with more than two lemmas
           !is_multiword,
           # exclude multi-word items
           include,
           # exclude problematic items (e.g., multi-word items)
           te %in% duplicated_te) |>
    add_count(te, name = "n_te") |> # get only items with one translation in each language
    filter(n_te == 2) |>
    distinct(language, te, .keep_all = TRUE) |> 
    select(language, te, item, label, childes_lemma, xsampa) |> 
    mutate(syll = strsplit(xsampa, 
                           split = paste0(.sep = c("\\.", "\\\""), 
                                          collapse = "|")),
           syll = lapply(syll, function(x) x[x != ""]),
           n_syll = purrr::map_int(syll, length),
           item = gsub("cat_|spa_", "", item)) 

items <- items |> 
    mutate(xsampa = ipa::ipa(ipa)) |> 
    mutate(syll = strsplit(xsampa, 
                           split = paste0(.sep = c("\\.", "\\\""), 
                                          collapse = "|")),
           syll = lapply(syll, function(x) x[x != ""]),
           n_syll = purrr::map_int(syll, length),
           item = gsub("cat_|spa_", "", item)) 
```

We define syllable frequency as the rate of appearance of individual syllables in the word-forms included in the Barcelona Vocabulary Questionnaire (BVQ) [@garcia-castro2023bvq]. Each item corresponds to a Catalan or Spanish word, and has an associated phonological transcription in X-SAMPA format [@wells1995computercoding]. These transcriptions are syllabified. Some examples:

```{r tbl-items-table}
#| label: tbl-syll-items
#| tbl-cap: Sample of items included in the BVQ questionnaire and their syllabified SAMPA transcriptions in Catalan and Spanish
#| echo: false
#| warning: false
#| message: false
tbl_data <- items |> 
    distinct(te, item, language, meaning, xsampa, n_syll) |> 
    left_join(distinct(pool_tmp, te, language, item, label),
              by = join_by(te, item, language)) |> 
    pivot_wider(names_from = language,
                values_from = c(item, label, xsampa, n_syll),
                id_cols = c(te, meaning),
                names_repair = janitor::make_clean_names,
                values_fn = first) |> 
    sample_n(15) |> 
    select(-c(te, item_catalan, item_spanish)) |> 
    relocate(meaning, matches("catalan"), matches("spanish"))

col_names <- c("Translation", "Item", "X-SAMPA", "Syllables",
               "Item", "X-SAMPA", "Syllables")

tbl_data |> 
    kable(format = "latex", 
          digits = 3,
          booktabs = TRUE,
          col.names = col_names, 
          align = "lllcllc") 
```


Most Catalan and Spanish words had two syllables, with Spanish words having three and four syllables more often than Catalan words. Less than 1% of the words included in the analyses presented in the main body of the manuscripts had five syllables. No words had more than five syllables (see @fig-syll-number). We extracted lexical frequencies from the English corpora in the CHILDES database [@macwhinney2000childes; @sanchez2019childesdb]. Using the Catalan and Spanish corpora was not possible due to the low number of children and tokens included in the corpora.

```{r fig-syll-number}
#| label: fig-syll-number
#| fig-cap: Distribution of the number of syllables in Catalan and Spanish
#| fig-width: 7
#| fig-height: 3
#| echo: false
#| warning: false
#| message: false
pool_tmp |> 
    group_by(language) |> 
    add_count(language, name = "n_lang") |> 
    ungroup() |> 
    count(language, n_lang, n_syll) |> 
    mutate(prop = n/n_lang) |> 
    ggplot(aes(n_syll, n)) +
    facet_wrap(~ language) +
    geom_col(colour = "white", fill = "grey70") +
    geom_text(aes(label = scales::percent(prop)),
              size = 3,
              position = position_nudge(y = 15),
              colour = "black") +
    labs(x = "Number of syllables",
         y = "Number of words",
         fill = "Language") +
    theme(legend.position = "none",
          panel.grid.minor = element_blank(),
          panel.grid.major.x = element_blank())
```


We now present how syllable frequencies were calculated. Every exposure to a word-form also counts as a exposure to each of the syllables that make up such word. Every time a child hears the word *casa* [house], they are exposed to the syllables *ca* and *sa*. Syllables that appear embedded in words with higher lexical frequency will also be more frequent. To compute the relative frequency of each syllable in Catalan and Spanish (i.e., how many times the syllables appears in every million words in Catalan or Spanish speech), we summed the relative lexical frequency in CHILDES of every word that contains such syllable in the corresponding language. @fig-syll-freq shows the distribution of frequencies across syllables in Catalan and Spanish. In the log10 scale, syllable frequencies in Catalan and Spanish followed a slightly asymmetric distribution, with most syllables scoring around 1,000 counts per million, and a longer tail to the right of the distribution.

```{r fig-syll-freq}
#| label: fig-syll-freq
#| fig-cap: "Distribution of apositional syllable frequencies in Spanish and Catalan"
#| fig-height: 3.5
#| fig-width: 7
#| echo: false
#| warning: false
#| message: false
syll <- items |> 
    left_join(distinct(pool_tmp, te, childes_lemma),
              by = join_by(te)) |> 
    left_join(select(childes, token, freq_lex = freq_million),
              by = c("childes_lemma" = "token")) |> 
    select(language, item, te, meaning, xsampa, lv, freq_lex, syll) |> 
    unnest_longer(syll) |> 
    summarise(freq_syll = sum(freq_lex),
              .by = c(language, syll)) |> 
    arrange(language, desc(freq_syll))

syll |> 
    add_count(language, name = "n_lang") |> 
    mutate(language = paste0(language, " (n = ", n_lang, ")")) |> 
    ggplot(aes(freq_syll)) +
    facet_wrap(~language) +
    geom_histogram(colour = "white",
                   bins = 20,
                   fill = "grey70",
                   position = position_nudge(y = 0.1)) +
    geom_rug(alpha = 1/10) +
    labs(x = "Relative frequency (counts per million)",
         y = "Counts",
         fill = "Language",
         colour = "Language") +
    scale_x_continuous(trans = "log10",
                       labels = \(x) format(x, big.mark = ",")) +
    theme(legend.title = element_blank(),
          panel.grid = element_blank(),
          legend.position = "none")
```

To estimate the association between word-level syllabic frequency and cognateness, while controlling for the number of syllables in the word, as words are expected to necessarily increase the syllabic frequency of the word), we fit a multilevel, Bayesian linear regression model with syllabic frequency (the sum of the syllabic frequency of the syllables in a word) as response variable, and the main effect of the number of syllables ($Syllables$) and $Cognateness$ [Levenshtein similarity between a word and its translation equivalent, @levenshtein1966binary] as predictors. We added translation equivalent-level random effects for the intercept and the main effect of $Syllables$ (some translation pairs had a different number of syllables in each language). We used a Gaussian distribution to model syllabic frequency scores after standardising this variable and the predictors. We used a weakly informative prior for all parameters involved in the model (see @eq-model-syllables for a formal equation of this model and its prior). We conducted statistical inference by evaluating the proportion of the 95% highest density interval (HDI) of the posterior posterior distribution of each coefficient that fell into the region of practical equivalence [ROPE, see the main manuscript for a more detailed explanation, @kruschke2018bayesian].

$$
\begin{aligned}
\text{Syllable frequency} &\sim \mathcal{N}(\mu, \sigma)\\
\mu &= (\beta_0 + u_{0_{i}}) + (\beta_1 + u_{1_{i}}) \text{Syllables} + \beta_2 \text{Cognateness} \\
\beta_{0-3} &\sim \mathcal{N}(0, 10) \\
u_{{0-1}_{i}} &\sim \mathcal{N}(0, \sigma_{u_i}) \\
\sigma_y & \sim \text{Exponential}(2)\\
\Big(\begin{smallmatrix}
u_{0_{i}} \\ 
u_{1_{i}} \\ 
\end{smallmatrix}\Big) &\sim \mathcal{N} 
\Big(\Big(\begin{smallmatrix}0 \\
0\end{smallmatrix}\Big), \Sigma_{u}\Big) \\
\Sigma_{u} &= \Big(\begin{smallmatrix} \\
\sigma_{u_{0}} & \rho_{u_{0}} \sigma_{u_{0}} \sigma_{u_{1}} \\ 
\rho_{u_{1}} \sigma_{u_{1}} \sigma_{u_{0}} & \sigma_{u_{1}} \end{smallmatrix}\Big) \\
\sigma_{u_{0-1}} &\sim \mathcal{N_{+}}(1, 0.1) \\
\rho_{u} &\sim LKJcorr(2) \\
\end{aligned}
$$ {#eq-model-syllables}

```{r syllables-posterior}
#| label: syllables-posterior
#| echo: false
#| warning: false
#| message: false
rope_interval <- c(lower = -0.5, upper = 0.5)
# tidy predictor names


post_draws_list <- posterior_syllables_summary |> 
    split(posterior_syllables_summary$.variable)

```

We fit this model running `r dim(model_fit_syllables$fit)[2]` sampling chains with `r format(dim(model_fit_syllables$fit)[1], big.mark = ",")` iterations each. @tbl-syll-coefs shows a summary of the posterior distribution of the fixed effects in the model. As expected, words with more syllables scored higher in syllabic frequency: all posterior draws for the regression coefficient of the main effect of this predictor fell outside the ROPE defined between -0.5 and +0.5 ($\beta$ = `r round(post_draws_list[["b_n_syll_std"]]$.value, 2)`, 95% HDI = [`r round(post_draws_list[["b_n_syll_std"]]$.lower, 2)`, `r round(post_draws_list[["b_n_syll_std"]]$.upper, 2)`]). Keeping the number of syllables constant, the effect of cognateness was negligible: all of the posterior distributions of this predictor fell within the ROPE, providing evidence that the true value of the increment in syllabic frequency for every increase in cognateness is equivalent to zero ($\beta$ = `r round(post_draws_list[["b_lv_std"]]$.value, 2)`, 95% HDI = [`r round(post_draws_list[["b_lv_std"]]$.lower, 2)`, `r round(post_draws_list[["b_lv_std"]]$.upper, 2)`]).

```{r tbl-syll-coefs}
#| label: tbl-syll-coefs
#| tbl-cap: "Posterior distribution of regression coefficients."
#| tbl-note: "Median: median of the posterior distribution in the probability scale. 95\\% HDI: 95\\% highest density interval of the distribution; narrowest range of values that contains 95\\% of the distribution, and therefore is 95\\% likely to contain the true value, given the data. On top of each distribution, we indicate the proportion of posterior samples in the 95\\% HDI that fall into the region of practical equivalence (ROPE). This proportion indicates the probability of the true value of the coefficient being equivalent to zero. Lower values indicate that the true value is unlikely to be zero of equivalent to zero."
#| echo: false
#| message: false
#| warning: false
# summarise posterior draws
tbl_data <- posterior_syllables_summary |>
    select(.variable_name, .value, .lower, .upper, .rope) |>
    mutate(
        .variable_name = gsub("×", '$\\\\times$', .variable_name),
        .hdi = paste0("[", round(.lower, 3),
                      ", ", round(.upper, 3), "]"),
        .rope = sub("^(-?)0.", "\\1.",
                    sprintf("%.3f", .rope))) |> 
    select(.variable_name, .value, .lower, .upper, .hdi, .rope) 

tbl_data |> 
    mutate(viz = "") |> 
    select(-c(.lower, .upper)) |> 
    knitr::kable(
        format = "latex", 
        escape = FALSE,
        col.names = c("",
                      "$\\beta$",
                      "95\\% HDI",
                      "$p(\\text{ROPE})$"),
        digits = 3,
        booktabs = TRUE,
        align = "lclr",
        linesep = ""
    ) |> 
    kableExtra::kable_styling()
```

@fig-syll-marginal shows the median posterior-predicted syllabic frequencies for words with one to four syllables, for the whole range of cognateness values. Overall, cognate words' syllabic frequency is equivalent to that of non-cognates. This suggests that the cognate facilitation effect in word acquisition reported in the present study is not the result from an association between cognateness and higher syllabic frequencies.

```{r fig-syll-marginal}
#| label: fig-syll-marginal
#| fig-cap: "Posterior-predictions of the syllabic frequency model. Thicker lines indicate the median of the posterior predictions, and thinner lines indicate individual posterior predictions."
#| fig-width: 7
#| fig-height: 5
#| out-width: 80%
#| echo: false
#| message: false
#| warning: false
expand_grid(lv_std = scale(seq(0, 1, 0.1),
                           center = mean(syllables_data$lv),
                           scale = sd(syllables_data$lv))[, 1],
            n_syll_std = scale(seq(1, 4, 1),
                               center = mean(syllables_data$n_syll),
                               scale = sd(syllables_data$n_syll))[, 1]) |> 
    tidybayes::add_epred_draws(model_fit_syllables,
                               re_formula = NA) |>
    tidybayes::median_hdci() |> 
    mutate(
        lv_std = (lv_std * sd(syllables_data$lv)) + mean(syllables_data$lv),
        n_syll_std = (n_syll_std * sd(syllables_data$n_syll)) + mean(syllables_data$n_syll),
        n_syll_std = as.factor(n_syll_std)) |> 
    ggplot(aes(lv_std, .epred, 
               shape = n_syll_std)) +
    geom_point(data = filter(syllables_data, n_syll < 5) |> 
                   mutate(n_syll_std = as.factor(n_syll)),
               aes(x = lv,
                   y = freq_syll,
                   shape = n_syll_std),
               alpha = 1/2) +
    # geom_ribbon(aes(ymin = .lower,
    #                 ymax = .upper),
    #             alpha = 1/2,
    #             colour = NA,
    #             show.legend = FALSE) +
    geom_line(aes(linetype = n_syll_std),
              linewidth = 0.5) +
    labs(x = "Cognateness (Levenshtein similarity)",
         y = "Syllabic frequency",
         linetype = "Number of syllables",
         shape = "Number of syllables",
         colour = "Number of syllables") +
    scale_y_continuous(n.breaks = 8) +
    theme(panel.grid = element_blank(),
          legend.position = "top")
```
