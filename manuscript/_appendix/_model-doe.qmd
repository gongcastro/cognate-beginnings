A a robustness check, we fit a model similar to the one described in the main manuscript, but including lexical frequency and language degree of exposure as separate predictors, instead of the composite measure *Exposure*. Language degree of exposure (*DoE*) was included in interaction with *Age* and *Cognateness*, while lexical frequency (*Frequency*) was included as a main effect.

```{r fig-coefs-doe}
#| label: fig-coefs-doe
#| fig-cap: "Posterior distribution of regression coefficients in the probability scale"
#| fig-note: "Median: median of the posterior distribution in the logit scale. 95\\% HDI: 95\\% highest density interval of the distribution; narrowest range of values that contains 95\\% of the distribution, and therefore is 95\\% likely to contain the true value, given the data. On top of each distribution, we indicate the proportion of posterior samples in the 95\\% HDI that fall into the region of practical equivalence (ROPE). This proportion indicates the probability of the true value of the coefficient being equivalent to zero. Lower values indicate that the true value is unlikely to be zero of equivalent to zero."
#| echo: false
#| message: false
#| warning: false
#| out-width: 100%
#| fig-height: 4
#| fig-width: 7
# summarise posterior draws
bind_rows("Exposure model" = model_summary,
          "DoE-Frequency model" = posterior_doe_summary,
          .id = "model") |> 
    mutate(
        across(c(.median, .lower, .upper),
               function(x) {
                   ifelse(
                       .type=="Intercepts (at 22 months)",
                       plogis(x),
                       x/4
                   )
               }
        )) |>
    filter(.type == "Slopes") |> 
    ggplot(aes(.median, .variable_name,
               xmin = .lower, xmax = .upper,
               colour = model,
               shape = model)) +
    annotate(geom = "rect",
             ymin = -Inf,
             ymax = Inf,
             xmin = -0.1/4,
             xmax = +0.1/4,
             fill = "grey90") +
    geom_vline(xintercept = 0, 
               linetype = "dashed",
               linewidth = 3/4) +
    geom_errorbar(linewidth = 3/4, 
                  position = position_dodge(width = 0.5),
                  width = 0.2) +
    geom_point(size = 2,
               position = position_dodge(width = 0.5)) +
    labs(x = "Median and 95% HDI of the posterior distribution",
         y = "Predictor",
         colour = "Model") +
    scale_colour_grey(start = 0, end = 0.6) +
    theme(legend.position = "none",
          axis.title.y = element_blank(),
          panel.grid.major.y = element_blank())
```

