As a robustness check, we fit a model similar to the one described in the main manuscript, but including lexical frequency and language degree of exposure as separate predictors, instead of the composite measure *Exposure*. Language degree of exposure (*DoE*) was included in interaction with *Age* and *Cognateness*, while lexical frequency (*Frequency*) was included as a main effect.

```{r fig-coefs-doe}
#| label: fig-coefs-doe
#| fig-cap: "Posterior distribution of regression coefficients of the model including the *Exposure* composite predictor, and of the model including lexical frequency and degree of exposure (DoE) separately. Dots and error bars indicate the median and 95% HDI of the posterior distribution of each coefficient. Coefficients of the *Exposure* model are indicated in grey with triangles. Coefficients of the *Frequency + DoE* model are indicated in black with circless. The region of practical equivalence (ROPE) around zero is indicated with a grey area and a grey line."
#| fig-note: ""
#| echo: false
#| message: false
#| warning: false
#| out-width: 100%
#| fig-height: 4
#| fig-width: 7
# summarise posterior draws
bind_rows("Exposure model" = model_summary,
          "DoE-Frequency model" = posterior_doe_summary,
          .id = "model") |> 
    mutate(
        across(c(.median, .lower, .upper),
               function(x) {
                   ifelse(
                       .type=="Intercepts (at 22 months)",
                       plogis(x),
                       x/4
                   )
               }
        )) |>
    filter(.type == "Slopes") |> 
    ggplot(aes(.median, .variable_name,
               xmin = .lower, xmax = .upper,
               colour = model,
               shape = model)) +
    annotate(geom = "rect",
             ymin = -Inf,
             ymax = Inf,
             xmin = -0.1/4,
             xmax = +0.1/4,
             fill = "grey90") +
    geom_vline(xintercept = 0, 
               linetype = "dashed",
               linewidth = 3/4,
               colour = "grey") +
    geom_errorbar(linewidth = 3/4, 
                  position = position_dodge(width = 0.5),
                  width = 0.3) +
    geom_point(size = 2.5,
               position = position_dodge(width = 0.5)) +
    labs(x = "Median and 95% HDI of the posterior distribution",
         y = "Predictor",
         colour = "Model") +
    scale_colour_grey(start = 0, end = 0.6) +
    theme(legend.position = "none",
          axis.title.y = element_blank(),
          panel.grid.major.y = element_blank())
```

